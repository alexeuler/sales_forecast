#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
View(df_new)
View(df_new)
df_new$weekYear = paste(df$Year,df$Week,sep="-")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
View(df_new)
View(df_new)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/import.R', echo=TRUE)
View(df_new)
View(df_new)
a= paste(df$Year,df$Week,sep="-")
df_new$weekYear = paste(df_new$Year,df_new$Week,sep="-")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
View(df_new)
View(df_new)
df_weekly = aggregate(df_new, by=list(df$weekYear))
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
df_weekly = aggregate(df_new, by=list(df$weekYear),FUN="sum")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
df_weekly = aggregate(df_new, by=list(df_new$weekYear),FUN="sum")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
source('~/.active-rstudio-document', echo=TRUE)
str(df_new$Date)
str(df_new$Year)
str(df_new$Week)
str(df_new$Day)
cust = data.frame(date = df_new$Date, year = df_new$Year, week = df_new$Week, day = df_new$Weekday, count = df_new$Cust...TOTAL)
df_weekly = aggregate(df_new, by=list(df_new$weekYear),FUN="sum")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
View(cust)
View(cust)
cust = data.frame(date = df_new$Date, year = df_new$Year, week = df_new$Week, day = df_new$Weekday, weekyear = df_new$weekyear, count = df_new$Cust...TOTAL)
df_weekly = aggregate(df_new, by=list(df_new$weekYear),FUN="sum")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
View(cust)
View(cust)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/import.R', echo=TRUE)
cust = data.frame(date = df_new$Date, year = df_new$Year, week = df_new$Week, day = df_new$Weekday, weekyear = df_new$Weekyear, count = df_new$Cust...TOTAL)
df_weekly = aggregate(df_new, by=list(df_new$weekYear),FUN="sum")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
View(cust)
View(cust)
View(df_new)
View(df_new)
cust = data.frame(date = df_new$Date, year = df_new$Year, week = df_new$Week, day = df_new$Weekday, weekyear = df_new$weekYear, count = df_new$Cust...TOTAL)
df_weekly = aggregate(df_new, by=list(df_new$weekYear),FUN="sum")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
View(cust)
View(cust)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/import.R', echo=TRUE)
View(df_new)
View(df_new)
a = aggregate(formula = count ~ weekYear, data = cust,FUN="sum")
View(cust)
View(cust)
a = aggregate(formula = count ~ weekyear, data = cust,FUN="sum")
View(a)
View(a)
b=merge(a,cust, by=weekyear)
b=merge(a,cust, by='weekyear')
View(b)
View(b)
b=merge(cust, a, by='weekyear')
View(b)
View(b)
b=merge(a,cust, by='weekyear', all.y=FALSE)
View(b)
View(b)
b=merge(a,cust, by='weekyear', all=FALSE)
View(b)
View(b)
b=merge(a,cust[cust$day=0], by='weekyear', all=FALSE)
b=merge(a,cust[cust$day=00], by='weekyear', all=FALSE)
b=merge(a,cust[cust$day==0], by='weekyear', all=FALSE)
View(cust)
View(cust)
b=merge(a,cust[cust$day==0,], by='weekyear', all=FALSE)
View(b)
View(b)
a = aggregate(formula = count ~ weekyear, data = cust,FUN="sum")
b=merge(a,cust[cust$day==0,], by='weekyear', all=FALSE)
b = aggregate(formula = cbind(week,year) ~ weekyear, data = cust,FUN="mean")
View(b)
View(b)
source('~/.active-rstudio-document', echo=TRUE)
View(df_new)
View(df_new)
View(df_new)
source('~/.active-rstudio-document', echo=TRUE)
df_by_year[["2008"]]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/import.R', echo=TRUE)
View(cust_agg1)
View(cust_agg1)
View(cust_agg2)
View(cust_agg2)
source('~/.active-rstudio-document', echo=TRUE)
View(cust_agg1)
View(cust_agg1)
weekly_cust = merge(cust_agg1,cust_agg2, by="weekyear")
#df_weekly = aggregate(df_new, by=list(df_new$weekYear),FUN="sum")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
View(weekly_cust)
View(weekly_cust)
source('~/.active-rstudio-document', echo=TRUE)
View(weekly_cust)
View(weekly_cust)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/import.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(cust_weekly)
View(cust_weekly)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(df_new)
View(df_new)
source('~/.active-rstudio-document', echo=TRUE)
df_new$Cust...TOTAL
source('~/.active-rstudio-document', echo=TRUE)
View(df_new)
View(df_new)
View(cust_weekly)
View(cust_weekly)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/import.R', echo=TRUE)
View(cust_weekly)
View(cust_weekly)
source('~/.active-rstudio-document', echo=TRUE)
View(cust_weekly)
View(cust_weekly)
View(cust_agg1)
View(cust_agg1)
View(df_new)
View(df_new)
source('~/.active-rstudio-document', echo=TRUE)
View(cust_weekly)
View(cust_weekly)
View(df)
View(df)
View(non_zeros)
View(non_zeros)
View(tail(df))
source("init.R", chdir=T)
df = readWorksheetFromFile(file = "Shop Figures v8.xlsx", sheet = "Takings", endCol = 13)
df$Weekday = strftime(df$Date,'%w')
df$Year = strftime(df$Date,'%Y')
#Year 2007 is incomplete
df=df[df$Year>2007,]
View(tail(df, n=1000))
source('~/.active-rstudio-document', echo=TRUE)
View(tail(df, n=1000))
tail(non_zeros, n = 1)
last_date = tail(non_zeros, n = 1)$Date
last_date = tail(non_zeros, n = 1)
last_date$Date
str(last_date)
str(last_date$Date)
source('~/.active-rstudio-document', echo=TRUE)
last_date
View(tail(df))
View(cust_weekly)
View(cust_weekly)
View(df)
View(df)
View(tail(df))
source('~/.active-rstudio-document', echo=TRUE)
df$Date$hour
source('~/.active-rstudio-document', echo=TRUE)
df$Date = df$Date + 3600
df$Weekday = strftime(df$Date,'%w')
df$Year = strftime(df$Date,'%Y')
#Year 2007 is incomplete
df=df[df$Year>2007,]
#Remove future zeros
non_zeros = df[df$Cust...TOTAL!=0,]
last_date = tail(non_zeros, n = 1)$Date
df=df[df$Date<=last_date,]
#adding week number starting the first day of the year
df_by_year=split(df,df$Year)
for (year in names(df_by_year)) {
x = seq(nrow(df_by_year[[year]]))
df_by_year[[year]]$Week = sprintf("%02d",ceiling(x/7))
}
df_new = do.call("rbind",df_by_year)
#modifying columns
df_new$Year = as.numeric(df_new$Year)
df_new$weekYear = paste(df_new$Year,df_new$Week,sep="-")
#assigning NA where daily sales are 0
df_new$Cust...TOTAL[df_new$Cust...TOTAL==0] = NA
#summing days to weekly data
cust = data.frame(date = df_new$Date, year = df_new$Year, week = df_new$Week, day = df_new$Weekday, weekyear = df_new$weekYear, count = df_new$Cust...TOTAL)
cust_agg1 = aggregate(formula = count ~ weekyear, data = cust, FUN="sum", na.action=na.pass)
cust_agg2 = aggregate(formula = cbind(week,year) ~ weekyear, data = cust,FUN="mean")
cust_weekly = merge(cust_agg1,cust_agg2, by="weekyear")
#df_weekly = aggregate(df_new, by=list(df_new$weekYear),FUN="sum")
#df_weekly = subset(df, Weekday == 0)
#cust_weekly = data.frame(date = df_weekly$Date, year = df_weekly$Year, week = df_weekly$Week,  count = df_weekly$Cust...TOTAL)
#removing future days
#non_zeros = subset(cust_weekly, cust_weekly$count!=0)
#last = as.numeric(row.names(tail(non_zeros, n = 1))) - 1 #last week is not full, e.g. only mon and tue stats available
#cust_weekly =cust_weekly[1:last,]
#filling zeros with averages
#cust_weekly$count[cust_weekly$count==0]=mean(cust_weekly$count)
#removing first and last week - to avoid 53 - 1 week inconsistencies
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=1,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=52,]
#cust_weekly=cust_weekly[as.numeric(cust_weekly$week)!=53,]
View(tail(df))
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/import.R', echo=TRUE)
View(cust_weekly)
View(cust_weekly)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/run.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/run.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cust_weekly$count
!is.na(cust_weekly$count)
View(cust_weekly)
general_graphs(cust_weekly)
general_graphs(cust_weekly)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/run.R', echo=TRUE)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/run.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Алексей Карасев/Dropbox/Business/oDesk/Tasks/Shop/Forecast/run.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#ggplot(cust_weekly, aes(x = week, y=count)) + geom_boxplot() + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(cust_weekly, aes(x=date, y=count)) + geom_line() + theme_bw()# + stat_smooth()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cust_weekly_ts=ts(cust_weekly_filtered, frequency = 52)
fit <- HoltWinters(cust_weekly_ts)
plot(fit)
source('~/.active-rstudio-document', echo=TRUE)
fit
str(fit)
plot(fit$fitted)
View(cust_weekly_filtered)
View(cust_weekly_filtered)
str(fit$fitted)
fit$fitted
summary(fit)
str(fit)
plot(fit)
plot(forecast(fit,100))
View(cust)
View(cust)
View(cust_weekly)
View(cust_weekly)
View(cust_weekly)
View(cust_weekly)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(cust_weekly_ts)
source('/media/storage/Dropbox/Business/oDesk/Tasks/Shop/Forecast/forecast.R', echo=TRUE)
plot(fit)
source('~/.active-rstudio-document', echo=TRUE)
data$training = cust_weekly_filtered$count[cust_weekly_filtered$year<2014,]
data$test=cust_weekly_filtered$count[cust_weekly_filtered$year==2014,]
cust_weekly_ts=ts(data$training, frequency = 52)
fit <- HoltWinters(cust_weekly_ts)
plot(fit)
source('~/.active-rstudio-document', echo=TRUE)
cust_weekly_filtered$count[cust_weekly_filtered$year<2014,]
cust_weekly_filtered$count
cust_weekly_filtered$count[cust_weekly_filtered$year<2014]
source('~/.active-rstudio-document', echo=TRUE)
cust_weekly_filtered[cust_weekly_filtered$year<2013,]
cust_weekly_filtered[cust_weekly_filtered$year<2013,]$count
data = cust_weekly_filtered[cust_weekly_filtered$year<2013,]$count
#data$test=cust_weekly_filtered[cust_weekly_filtered$year==2014,]$count
cust_weekly_ts=ts(data$training, frequency = 52)
fit <- HoltWinters(cust_weekly_ts)
plot(fit)
cust_weekly_filtered = cust_weekly[cust_weekly$week!=53,]
data = list()
data$training = cust_weekly_filtered[cust_weekly_filtered$year<2013,]$count
#data$test=cust_weekly_filtered[cust_weekly_filtered$year==2014,]$count
cust_weekly_ts=ts(data$training, frequency = 52)
fit <- HoltWinters(cust_weekly_ts)
plot(fit)
source('~/.active-rstudio-document', echo=TRUE)
fit
str(fit)
fit$x
plot(fit$x)
par(mrow(c(1,2)))
plot(fit$x)
par(mfrow=c(2,2))
plot(fit)
plot(fit$x)
par(mfrow=c(1,2))
plot(fit)
plot(fit$x)
plot(fit$fitted)
par(mfrow=c(1,2))
plot(fit)
plot(fit$fitted$xhat)
str(fit$fitted$)
str(fit$fitted)
str(fit$fitted["xhat"])
str(fit$fitted[,"xhat"])
par(mfrow=c(1,2))
plot(fit)
plot(fit$fitted[,"xhat"])
source('~/.active-rstudio-document', echo=TRUE)
nrow(data$test)
length(data$test)
data$forecast_ts=forecast(fit,n=length(data$test))
par(mfrow=c(1,2))
plot(fit)
plot(fit$fitted[,"xhat"])
data$forecast
srt(data$forecast_ts)
str(data$forecast_ts)
source('~/.active-rstudio-document', echo=TRUE)
str(data$forecast_ts)
ggplot(data$forecast_ts)+geom_line()
source('~/.active-rstudio-document', echo=TRUE)
c(data$fitted_cs)
c(data$fitted_ts)
ggplot(c(data$forecast))+geom_line()
ggplot(c(data$forecast_ts))+geom_line()
c(data$forecast_ts)
source('~/.active-rstudio-document', echo=TRUE)
c(data$forecast_ts)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(c(data$forecast_ts))+aes(x=seq(length(c(data$forecast_ts))))+geom_line()
ggplot(c(data$forecast_ts))+aes(x=seq(length(c(data$forecast_ts))))+geom_line()
ggplot(data)+geom_line(aes(y=c(forecast_ts)))
source('~/.active-rstudio-document', echo=TRUE)
View(data$training)
View(data$training)
plot(fit)
c(fit$fitted[,"xhat"])
fit$fitted[,"xhat"]
ts(data$training$actual, frequency = 52)
time(ts(data$training$actual, frequency = 52))
time(fit$fitted[,"xhat"])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
data$training$time
fitted_frame=ts_to_frame(fit$fitted[,"xhat"])
data$training$fitted=c(fit$fitted[,"xhat"])
data$test$fitted=c(fcast$mean)
#ggplot(data)+geom_line(aes(y=c(forecast_ts)))
View(fitted_frame)
source('~/.active-rstudio-document', echo=TRUE)
View(fitted_frame)
View(fitted_frame)
fitted_frame=ts_to_frame(fit$fitted[,"xhat"], name = "fitted")
data$training$fitted=c(fit$fitted[,"xhat"])
data$test$fitted=c(fcast$mean)
#ggplot(data)+geom_line(aes(y=c(forecast_ts)))
View(fitted_frame)
View(fitted_frame)
source('~/.active-rstudio-document', echo=TRUE)
View(fitted_frame)
View(fitted_frame)
data$training = merge(data$training, fitted_frame, by="time")
#data$training$fitted=c(fit$fitted[,"xhat"])
#data$test$fitted=c(fcast$mean)
#ggplot(data)+geom_line(aes(y=c(forecast_ts)))
View(data$training)
data$training = merge(data$training, fitted_frame, by="time", all=T)
#data$training$fitted=c(fit$fitted[,"xhat"])
#data$test$fitted=c(fcast$mean)
#ggplot(data)+geom_line(aes(y=c(forecast_ts)))
View(data$training)
source('~/.active-rstudio-document', echo=TRUE)
View(data$training)
source('~/.active-rstudio-document', echo=TRUE)
View(data$test)
View(fitted_frame)
View(fitted_frame)
source('/media/storage/Dropbox/Business/oDesk/Tasks/Shop/Forecast/forecast.R', echo=TRUE)
c(fcast$mean)
length(data$test$actual)
str(length(data$test$actual))
str(fcast)
source('/media/storage/Dropbox/Business/oDesk/Tasks/Shop/Forecast/forecast.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data$training)+geom_line(aes(y=actual))
